name: Version Check and Release

on:
  push:
    paths:
      - 'package.json'
    branches:
      - main
      - master
  workflow_dispatch:

jobs:
  check-version:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
    outputs:
      version: ${{ steps.get_version.outputs.version }}
      changed: ${{ steps.check_version.outputs.changed }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      
      - name: Get current version
        id: get_version
        run: |
          VERSION=$(jq -r '.version' package.json)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
      - name: Check if version changed
        id: check_version
        run: |
          git checkout HEAD^1
          OLD_VERSION=$(jq -r '.version' package.json)
          git checkout -
          if [ "$OLD_VERSION" != "${{ steps.get_version.outputs.version }}" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

  create-release:
    needs: check-version
    if: needs.check-version.outputs.changed == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.check-version.outputs.version }}
          release_name: Release v${{ needs.check-version.outputs.version }}
          draft: false
          prerelease: false

  trigger-rebuild:
    needs: [check-version, create-release]
    if: always() && needs.check-version.outputs.changed == 'true'
    runs-on: ubuntu-latest
    permissions:
      actions: write
    steps:
      - uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.VPM_LISTING }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: 'pesky12',
              repo: 'PeskyBox',
              workflow_id: 'build-listing.yml',
              ref: 'main',
            })

# thanks to bd_ for some code of this action: https://github.com/bdunderscore/modular-avatar/blob/main/.github/workflows/trigger-repo-rebuild.yml